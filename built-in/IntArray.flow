/**
 * Array of Ints
 */
type IntArray = {

  external static def apply(size: Int): IntArray

  static def apply(): IntArray =
    IntArray(0)

  external def size: Int

  external def capacity: Int

  external def apply(index: Int): Int

  external def update(index: Int, elem: Int): Unit

  external def resize(size: Int): Unit

  external def +=(elem: Int): Unit

  external def ++=(elems: IntArray): Unit

  external def +:(elem: Int): IntArray

  external def :+(elem: Int): IntArray

  def subsequence(from: Int, to: Int): IntArray = {
    val subsequence = IntArray(to - from)

    var i = 0
    var j = from
    while j < to do {
      subsequence(i) = this(j)
      i += 1
      j += 1
    }

    subsequence
  }

  def subsequence(from: Int): IntArray =
    this.subsequence(from, this.size)

  def copy: IntArray =
    this.subsequence(0)

  external def clear(): Unit

}
